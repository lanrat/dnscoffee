{{template "top" $}}

<div class="row">
  <div class="col-lg-8">
    <div class="card border-primary mb-3">
      <h3 class="card-header">{{$.Data.Name}}</h3>
      <div class="card-body">
        <p class="card-text">
          {{if $.Data.FirstSeen}}
          First Seen: {{date $.Data.FirstSeen}} <br />
          {{end}}
          {{if $.Data.LastSeen}}
          Last Seen: {{date $.Data.LastSeen}} <br />
          {{end}}
          {{if $.Data.ImportData}}
          First Import: {{date $.Data.ImportData.FirstImportDate}} <br />
          Last Import: {{date $.Data.ImportData.LastImportDate}} <br />
          Number of Zone Imports: {{nfmt $.Data.ImportData.Count}} <br />
          Number of Domains: {{nfmt $.Data.ImportData.Domains}} <br />
          {{end}}
        </p>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-md-12">
    <div class="card">
      <a href="#timeline" id="timeline"
        class="list-group-item d-flex justify-content-between align-items-center active">
        Nameserver Timeline
      </a>
      <div id="timelinespinner" class="spinner">
        <div class="bounce1"></div>
        <div class="bounce2"></div>
        <div class="bounce3"></div>
      </div>
      <div id="timelineDiv"></div>
    </div>
    <script>
      fetch("/api/zones/{{$.Data.Name}}")
        .then(response => response.json())
        .then(api_response => {

          // get all ns into dict
          var nameservers = {};
          var yCounter = 0;
          var add_ns_to_dict = function (ns) {
            if (!(ns.name in nameservers)) {
              nameservers[ns.name] = [];
            }
            nameservers[ns.name].push(ns);
          };
          if ('nameservers' in api_response.data) {
            api_response.data.nameservers.forEach(add_ns_to_dict);
          }
          if ('archive_nameservers' in api_response.data) {
            api_response.data.archive_nameservers.forEach(add_ns_to_dict);
          }
          // merge dict into timeline
          timeline = [];
          for (const name in nameservers) {
            yCounter = yCounter + 1;
            var ns = {
              x: [],
              y: [],
              text: [],
              name: name,
              line: { width: 10 },
              type: 'scatter',
              mode: 'lines+text',
              connectgaps: false,
              textposition: 'right',
              textfont: {
                size: 10,
              }
            };
            for (var i = 0; i < nameservers[name].length; i++) {
              if (!nameservers[name][i].hasOwnProperty("firstseen")) {
                nameservers[name][i].firstseen = api_response.data.root.first_import;
              }
              if (!nameservers[name][i].hasOwnProperty("lastseen")) {
                if (!api_response.data.hasOwnProperty("lastseen")) {
                  nameservers[name][i].lastseen = new Date().toISOString();
                } else {
                  nameservers[name][i].lastseen = api_response.data.root.last_import;
                }
              }
              ns.x.push(nameservers[name][i].firstseen, nameservers[name][i].lastseen, '');
              ns.y.push(yCounter, yCounter, yCounter);
              ns.text.push("", "", "");
            }
            ns.text[1] = name;
            timeline.push(ns);
          }

          //console.log(timeline);
          var layout = {
            autosize: true,
            showlegend: false,
            yaxis: {
              showgrid: false,
              zeroline: false,
              showline: false,
              showticklabels: false,
              automargin: true,
            },
            xaxis: {
              automargin: true,
            },
            margin: {
              l: 10,
              r: 10,
              b: 10,
              t: 10,
            },
          };

          var config = {
            displaylogo: false,
            responsive: true
          };

          Plotly.newPlot('timelineDiv', timeline, layout, config).then(function () { $("#timelinespinner").hide() });
        });
    </script>
  </div>
</div>

{{if $.Data.ImportData}}
<div class="row">
  <div class="col-md-12">
    <div class="card">
      <a href="#chart" id="chart" class="list-group-item d-flex justify-content-between align-items-center active">
        Zone Growth
      </a>
      <div id="spinner1" class="spinner">
        <div class="bounce1"></div>
        <div class="bounce2"></div>
        <div class="bounce3"></div>
      </div>
      <div id="historyDiv"></div>
    </div>
    <script>
      fetch("/api/counts/zone/{{$.Data.Name}}")
        .then(response => response.json())
        .then(api_response => {
          dates = [];
          domains = [];
          oldC = [];
          movedC = [];
          newC = [];
          api_response.data.history.forEach(function (e) {
            dates.push(e.date);
            domains.push(e.domains);
            oldC.push(e.old);
            movedC.push(e.moved);
            newC.push(e.new);
          });

          var data = [{
            x: dates,
            y: domains,
            type: 'scatter',
            mode: "lines",
            name: "Domains (total)",
            line: {
              dash: 'dot',
            },
          },
          {
            x: dates,
            y: oldC,
            type: 'scatter',
            mode: "lines",
            name: "Removed (delta)",
            yaxis: 'y2',
          },
          {
            x: dates,
            y: movedC,
            type: 'scatter',
            mode: "lines",
            name: "Transferred (delta)",
            yaxis: 'y2',
          },
          {
            x: dates,
            y: newC,
            type: 'scatter',
            mode: "lines",
            name: "New (delta)",
            yaxis: 'y2',
          }];

          var layout = {
            autosize: true,
            showlegend: true,
            yaxis: { title: 'Total Domains' },
            yaxis2: {
              title: 'Deltas',
              overlaying: 'y',
              side: 'right',
              automargin: true,
            },
            xaxis: {
              automargin: true,
            },
            margin: {
              l: 80,
              r: 60,
              b: 40,
              t: 40,
            },
          };

          var config = {
            displaylogo: false,
            responsive: true
          };

          Plotly.newPlot('historyDiv', data, layout, config).then(function () { $("#spinner1").hide() });
        });
    </script>
  </div>
</div>
{{end}}


<div class="row">
  <div class="col-md-6">
    <div class="card">
      <a href="#" class="list-group-item d-flex justify-content-between align-items-center active">
        Current Nameservers
        <span class="badge badge-light badge-pill">{{count (len $.Data.NameServers) $.Data.NameServerCount}}</span>
      </a>
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th>Name</th>
            <th>First Seen</th>
          </tr>
        </thead>
        <tbody>
          {{ range $key, $value := $.Data.NameServers }}
          <tr>
            <td><a href="/nameservers/{{$value.Name}}">{{$value.Name}}</a></td>
            <td>{{date $value.FirstSeen}}</td>
          </tr>
          {{ end }}
        </tbody>
      </table>
    </div>
  </div>

  <div class="col-md-6">
    <div class="card">
      <a href="#" class="list-group-item d-flex justify-content-between align-items-center active">
        Past Nameservers
        <span
          class="badge badge-light badge-pill">{{count (len $.Data.ArchiveNameServers) $.Data.ArchiveNameServerCount}}</span>
      </a>
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th>Name</th>
            <th>First Seen</th>
            <th>Last Seen</th>
          </tr>
        </thead>
        <tbody>
          {{ range $key, $value := $.Data.ArchiveNameServers }}
          <tr>
            <td><a href="/nameservers/{{$value.Name}}">{{$value.Name}}</a></td>
            <td>{{date $value.FirstSeen}}</td>
            <td>{{date $value.LastSeen}}</td>
          </tr>
          {{ end }}
        </tbody>
      </table>
    </div>
  </div>
</div>

{{if $.Data.Domains}}
<div class="row">
  <div class="col-md-6">
    <div class="card">
      <a href="#" class="list-group-item d-flex justify-content-between align-items-center active">
        Sample Domains
      </a>
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th>Name</th>
            <th>Last Seen</th>
          </tr>
        </thead>
        <tbody>
          {{ range $key, $value := $.Data.Domains }}
          <tr>
            <td><a href="/domains/{{$value.Name}}">{{$value.Name}}</a></td>
            <td>{{date $value.LastSeen}}</td>
          </tr>
          {{ end }}
        </tbody>
      </table>
    </div>
  </div>
</div>
{{end}}

{{template "bottom" $}}